SYSTEM MESSAGE:
Task: You are expert in coding assistant. Your task is fix the error of this pipeline code.### Input: The user will provide a pipeline code enclosed in "<CODE> pipline code will be here. </CODE>", and an error message enclosed in "<ERROR> error message will be here. </ERROR>".### Rule : Each codeblock ends with "```end" and starts with "```python".
---------------------------------------
PROMPT TEXT:
###  Schema, and Data Profiling Info:
"""
# DayOfWeek (int), categorical-values [2,3,0,6,5,4,1]
# AirportTo (int), distinct-count [190], min-value [0.0], max-value [284.0], median-value [25.0], mean-value [43.102]
# Airline (int), categorical-values [0,2,14,7,5,17,4,15,11,1,10,12,13,16,3,9,8,6]
# AirportFrom (int), distinct-count [187], min-value [0.0], max-value [282.0], median-value [65.0], mean-value [76.21]
# Flight (int), distinct-count [1611], min-value [1.0], max-value [7801.0], median-value [1859.5], mean-value [2457.833]
# Length (int), distinct-count [288], min-value [26.0], max-value [420.0], median-value [116.0], mean-value [131.197]
# Time (int), distinct-count [520], min-value [15.0], max-value [1431.0], median-value [786.0], mean-value [795.0555]
# Delay (bool, **This is a target column**), categorical-values [1,0]
"""


### <CODE>
# ```python
import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, f1_score, roc_auc_score

train_data = pd.read_csv("../../../data/Airlines/Airlines_train.csv")
test_data = pd.read_csv("../../../data/Airlines/Airlines_test.csv")


train_data_augmented = train_data.copy()
train_data_augmented['Time'] = train_data_augmented['Time'].apply(lambda x: x + int(np.random.normal(0, 5))) # Add small random noise to Time
train_data = pd.concat([train_data, train_data_augmented], ignore_index=True)

ohe = OneHotEncoder(handle_unknown='ignore')
feature_cols = ['DayOfWeek', 'Airline']
ohe.fit(pd.concat([train_data[feature_cols], test_data[feature_cols]]))
train_encoded = pd.DataFrame(ohe.transform(train_data[feature_cols]).toarray())
test_encoded = pd.DataFrame(ohe.transform(test_data[feature_cols]).toarray())
train_data = train_data.drop(feature_cols, axis=1).reset_index(drop=True).join(train_encoded)
test_data = test_data.drop(feature_cols, axis=1).reset_index(drop=True).join(test_encoded)

train_data['MorningFlight'] = train_data['Time'].apply(lambda x: 1 if 500 <= x <= 1200 else 0) 
test_data['MorningFlight'] = test_data['Time'].apply(lambda x: 1 if 500 <= x <= 1200 else 0)

train_data.drop(columns=['Flight'], inplace=True)
test_data.drop(columns=['Flight'], inplace=True)

target_col = 'Delay'

trn = RandomForestClassifier(max_leaf_nodes=500)
trn.fit(train_data.drop(target_col, axis=1), train_data[target_col])

Train_AUC = roc_auc_score(train_data[target_col], trn.predict_proba(train_data.drop(target_col, axis=1))[:,1])
Train_Accuracy = accuracy_score(train_data[target_col], trn.predict(train_data.drop(target_col, axis=1)))
Train_F1_score = f1_score(train_data[target_col], trn.predict(train_data.drop(target_col, axis=1)))
Test_AUC = roc_auc_score(test_data[target_col], trn.predict_proba(test_data.drop(target_col, axis=1))[:,1])
Test_Accuracy = accuracy_score(test_data[target_col], trn.predict(test_data.drop(target_col, axis=1)))
Test_F1_score = f1_score(test_data[target_col], trn.predict(test_data.drop(target_col, axis=1)))
print(f"Train_AUC:{Train_AUC}")
print(f"Train_Accuracy:{Train_Accuracy}")   
print(f"Train_F1_score:{Train_F1_score}")
print(f"Test_AUC:{Test_AUC}")
print(f"Test_Accuracy:{Test_Accuracy}")   
print(f"Test_F1_score:{Test_F1_score}") 
# ```end
</CODE>

### <ERROR>
NameError: name 'np' is not defined
</ERROR>

### Question: Fix the code error provided and return only the corrected pipeline without additional explanations regarding the resolved error.