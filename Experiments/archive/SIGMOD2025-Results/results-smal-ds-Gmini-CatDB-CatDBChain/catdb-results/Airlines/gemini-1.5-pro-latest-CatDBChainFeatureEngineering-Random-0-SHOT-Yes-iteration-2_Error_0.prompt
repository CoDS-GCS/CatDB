SYSTEM MESSAGE:
Task: You are expert in coding assistant. Your task is fix the error of this pipeline code.### Input: The user will provide a pipeline code enclosed in "<CODE> pipline code will be here. </CODE>", and an error message enclosed in "<ERROR> error message will be here. </ERROR>".### Rule : Each codeblock ends with "```end" and starts with "```python".
---------------------------------------
PROMPT TEXT:
###  Schema, and Data Profiling Info:
"""
# DayOfWeek (int), categorical-values [2,3,0,6,5,4,1]
# AirportTo (int), distinct-count [190], min-value [0.0], max-value [284.0], median-value [25.0], mean-value [43.102]
# Airline (int), categorical-values [0,2,14,7,5,17,4,15,11,1,10,12,13,16,3,9,8,6]
# AirportFrom (int), distinct-count [187], min-value [0.0], max-value [282.0], median-value [65.0], mean-value [76.21]
# Flight (int), distinct-count [1611], min-value [1.0], max-value [7801.0], median-value [1859.5], mean-value [2457.833]
# Length (int), distinct-count [288], min-value [26.0], max-value [420.0], median-value [116.0], mean-value [131.197]
# Time (int), distinct-count [520], min-value [15.0], max-value [1431.0], median-value [786.0], mean-value [795.0555]
# Delay (bool, **This is a target column**), categorical-values [1,0]
"""


### <CODE>
# ```python
import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.compose import make_column_transformer, make_column_selector
import numpy as np
from sklearn.pipeline import FeatureUnion

train_data = pd.read_csv("../../../data/Airlines/Airlines_train.csv")
test_data = pd.read_csv("../../../data/Airlines/Airlines_test.csv")

categorical_features = ["DayOfWeek", "Airline"]
numerical_features = ["AirportTo", "AirportFrom", "Flight", "Length", "Time"]

class SpeedTransformer(BaseEstimator, TransformerMixin):
    def fit(self, X, y=None):
        return self

    def transform(self, X):
        X_copy = X.copy()
        X_copy["Speed"] = X_copy["Length"] / (X_copy["Time"] / 60)  # Calculate speed in miles per hour
        return X_copy[["Speed"]]

preprocessor = ColumnTransformer(
    transformers=[
        ("num", StandardScaler(), numerical_features),  # Apply standard scaling to numerical features
        ("cat", OneHotEncoder(), categorical_features),  # Apply one-hot encoding to categorical features
        ("speed", SpeedTransformer(), numerical_features),  # Calculate and add speed feature
    ]
)

pipeline = Pipeline(
    steps=[
        ("preprocessor", preprocessor),
    ]
)

X_train = pipeline.fit_transform(train_data.drop("Delay", axis=1))
y_train = train_data["Delay"]

X_test = pipeline.transform(test_data.drop("Delay", axis=1))
y_test = test_data["Delay"]
# ```end
</CODE>

### <ERROR>
NameError: name 'BaseEstimator' is not defined
</ERROR>

### Question: Fix the code error provided and return only the corrected pipeline without additional explanations regarding the resolved error.