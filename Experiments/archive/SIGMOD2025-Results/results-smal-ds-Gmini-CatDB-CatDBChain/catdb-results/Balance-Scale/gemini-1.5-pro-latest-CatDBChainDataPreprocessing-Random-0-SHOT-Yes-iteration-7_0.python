# ```python
import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
import numpy as np
from threading import Thread

def process_data(data, encoder):
    # Apply one-hot encoding to selected columns
    data_encoded = encoder.fit_transform(data)
    return data_encoded

train_data = pd.read_csv("../../../data/Balance-Scale/Balance-Scale_train.csv")
test_data = pd.read_csv("../../../data/Balance-Scale/Balance-Scale_test.csv")

categorical_features = ['right-weight', 'right-distance', 'left-weight', 'left-distance', 'class']

encoder = OneHotEncoder(handle_unknown='ignore', sparse_output=False)

train_thread = Thread(target=process_data, args=(train_data[categorical_features], encoder))
test_thread = Thread(target=process_data, args=(test_data[categorical_features], encoder))

train_thread.start()
test_thread.start()

train_thread.join()
test_thread.join()

train_data_encoded = train_thread.result()
test_data_encoded = test_thread.result()
# ```end