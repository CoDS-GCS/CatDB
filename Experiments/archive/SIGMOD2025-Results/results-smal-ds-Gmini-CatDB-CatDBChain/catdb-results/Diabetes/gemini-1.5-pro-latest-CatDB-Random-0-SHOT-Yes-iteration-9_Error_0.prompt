SYSTEM MESSAGE:
Task: You are expert in coding assistant. Your task is fix the error of this pipeline code.### Input: The user will provide a pipeline code enclosed in "<CODE> pipline code will be here. </CODE>", and an error message enclosed in "<ERROR> error message will be here. </ERROR>".### Rule : Each codeblock ends with "```end" and starts with "```python".
---------------------------------------
PROMPT TEXT:
###  Schema, and Data Profiling Info:
"""
# mass (float), distinct-count [248], min-value [0.0], max-value [67.0999984741211], median-value [32.0], mean-value [31.99257813890775]
# pedi (float), distinct-count [517], min-value [0.0780000016093254], max-value [2.4200000762939453], median-value [0.3725000023841858], mean-value [0.4718763029280429]
# skin (int), distinct-count [51], min-value [0.0], max-value [99.0], median-value [23.0], mean-value [20.536458333333332]
# pres (int), distinct-count [47], min-value [0.0], max-value [122.0], median-value [72.0], mean-value [69.10546875]
# insu (int), distinct-count [186], min-value [0.0], max-value [846.0], median-value [30.5], mean-value [79.79947916666667]
# preg (int), categorical-values [1,0,4,6,2,10,12,3,11,5,8,9,7,13,14,15,17]
# plas (int), distinct-count [136], min-value [0.0], max-value [199.0], median-value [117.0], mean-value [120.89453125]
# age (int), distinct-count [52], min-value [21.0], max-value [81.0], median-value [29.0], mean-value [33.240885416666664]
# class (bool, **This is a target column**), categorical-values [1,0]
"""


### <CODE>
# ```python
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, f1_score, roc_auc_score
from sklearn.preprocessing import OneHotEncoder

train_data = pd.read_csv("../../../data/Diabetes/Diabetes_train.csv")
test_data = pd.read_csv("../../../data/Diabetes/Diabetes_test.csv")



ohe = OneHotEncoder(handle_unknown='ignore')
feature_array_train = ohe.fit_transform(train_data[['preg']]).toarray()
feature_labels_train = np.array(ohe.categories_).ravel()
features_train = pd.DataFrame(feature_array_train, columns=feature_labels_train)
train_data = pd.concat([train_data, features_train], axis=1)

feature_array_test = ohe.transform(test_data[['preg']]).toarray()
feature_labels_test = np.array(ohe.categories_).ravel()
features_test = pd.DataFrame(feature_array_test, columns=feature_labels_test)
test_data = pd.concat([test_data, features_test], axis=1)


train_data.drop(columns=['preg'], inplace=True)
test_data.drop(columns=['preg'], inplace=True)

X_train = train_data.drop('class', axis=1)
y_train = train_data['class']
X_test = test_data.drop('class', axis=1)
y_test = test_data['class']

trn = RandomForestClassifier(max_leaf_nodes=500, random_state=42) 

trn.fit(X_train, y_train)

y_pred_train = trn.predict(X_train)
y_pred_test = trn.predict(X_test)

Train_Accuracy = accuracy_score(y_train, y_pred_train)
Test_Accuracy = accuracy_score(y_test, y_pred_test)

Train_F1_score = f1_score(y_train, y_pred_train)
Test_F1_score = f1_score(y_test, y_pred_test)

Train_AUC = roc_auc_score(y_train, y_pred_train)
Test_AUC = roc_auc_score(y_test, y_pred_test)

print(f"Train_AUC:{Train_AUC}")
print(f"Train_Accuracy:{Train_Accuracy}")   
print(f"Train_F1_score:{Train_F1_score}")
print(f"Test_AUC:{Test_AUC}")
print(f"Test_Accuracy:{Test_Accuracy}")   
print(f"Test_F1_score:{Test_F1_score}") 
# ```end
</CODE>

### <ERROR>
NameError: name 'np' is not defined
</ERROR>

### Question: Fix the code error provided and return only the corrected pipeline without additional explanations regarding the resolved error.