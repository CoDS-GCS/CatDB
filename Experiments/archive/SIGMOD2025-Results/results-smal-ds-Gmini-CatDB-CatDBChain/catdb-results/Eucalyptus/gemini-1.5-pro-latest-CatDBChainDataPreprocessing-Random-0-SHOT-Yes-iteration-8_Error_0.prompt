SYSTEM MESSAGE:
Task: You are expert in coding assistant. Your task is fix the error of this pipeline code.### Input: The user will provide a pipeline code enclosed in "<CODE> pipline code will be here. </CODE>", and an error message enclosed in "<ERROR> error message will be here. </ERROR>".### Rule : Each codeblock ends with "```end" and starts with "```python".
---------------------------------------
PROMPT TEXT:
###  Schema, and Data Profiling Info:
"""
# DBH (float), distinct-count [603], min-value [0.5799999833106995], max-value [42085.0], median-value [14.199999809265137], mean-value [72.94736327841169]
# Stem_Fm (float), categorical-values [2.5999999046325684,5.0,3.0,3.5,3.200000047683716,3.299999952316284,2.5,2.799999952316284,4.0,1.0,2.0,3.400000095367432,2.299999952316284,0.0,4.199999809265137,2.700000047683716,3.700000047683716,4.300000190734863,4.800000190734863,3.799999952316284,and 6 more]
# Surv (float), distinct-count [47], min-value [1.5], max-value [100.0], median-value [63.0], mean-value [59.675233644859816]
# Vig (float), categorical-values [3.5999999046325684,5.0,2.5,3.5,2.700000047683716,4.0,3.0,3.299999952316284,1.899999976158142,1.0,1.5,2.0,4.5,4.599999904632568,2.799999952316284,3.700000047683716,2.299999952316284,1.7999999523162842,4.099999904632568,2.900000095367432,and 13 more]
# Ht (float), distinct-count [531], min-value [1.1200000047683716], max-value [21.790000915527344], median-value [9.0], mean-value [9.294707493879358]
# Brnch_Fm (float), categorical-values [2.5,4.5,3.5,3.0,4.0,2.799999952316284,2.0,1.0,0.5,4.300000190734863,1.2000000476837158,1.5,3.200000047683716,3.299999952316284,0.0,3.700000047683716,3.0999999046325684,3.400000095367432,2.900000095367432,1.7000000476837158,and 8 more]
# Ins_res (float), categorical-values [3.799999952316284,4.0,2.0,3.0,3.5,2.0999999046325684,1.0,1.5,2.5,2.299999952316284,1.2000000476837158,3.200000047683716,2.700000047683716,1.7999999523162842,2.799999952316284,4.5,3.299999952316284,1.7000000476837158,3.700000047683716,2.5999999046325684,and 8 more]
# Crown_Fm (float), categorical-values [2.5999999046325684,4.0,3.299999952316284,3.5,3.0,2.0,1.0,4.5,2.5,1.7999999523162842,3.200000047683716,4.199999809265137,1.5,3.700000047683716,3.900000095367432,3.400000095367432,3.799999952316284,4.099999904632568,4.300000190734863,2.900000095367432,and 9 more]
# Altitude (int), categorical-values [150,100,180,220,130,160,200,300,70]
# Rep (int), categorical-values [1,3,2,22]
# PMCno (int), distinct-count [85], min-value [1.0], max-value [3275.0], median-value [2426.0], mean-value [2054.7393689986284]
# Rainfall (int), categorical-values [1300,850,1080,1050,1000,1400,1200,1750,900,1250]
# Map_Ref (int), categorical-values [10,0,4,8,2,5,6,1,9,12,3,11,13,7]
# Locality (int), categorical-values [6,0,4,5,2,1,7,3]
# Frosts (int), categorical-values [-2,-3]
# Sp (int), categorical-values [23,5,6,14,8,22,18,12,24,3,16,13,4,19,1,7,15,11,2,26,and 7 more]
# Latitude (int), categorical-values [9,0,4,7,2,5,1,8,11,3,10,6]
# Year (int), categorical-values [1983,1980,1981,1982,1986]
# Abbrev (int), categorical-values [11,0,12,9,2,5,6,1,8,10,14,4,3,13,15,7]
# Utility (int, **This is a target column**), categorical-values [3,4,2,1,0]
"""


### <CODE>
# ```python
import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer

categorical_cols = ['Stem_Fm', 'Vig', 'Brnch_Fm', 'Ins_res', 'Crown_Fm', 'Altitude', 'Rep', 'Rainfall', 'Map_Ref', 
                   'Locality', 'Frosts', 'Utility', 'Sp', 'Latitude', 'Year', 'Abbrev']

preprocessor = ColumnTransformer(
    transformers=[
        ('cat', OneHotEncoder(handle_unknown='ignore'), categorical_cols)
    ],
    remainder='passthrough'  # Pass through numerical columns
)

pipeline = Pipeline(
    steps=[
        ('imputer', SimpleImputer(strategy='median')),  # Handle potential missing values
        ('preprocessor', preprocessor)
    ],
    n_jobs=-1  # Use all available cores
)

train_data = pd.read_csv("../../../data/Eucalyptus/Eucalyptus_train.csv")
test_data = pd.read_csv("../../../data/Eucalyptus/Eucalyptus_test.csv")

train_data_processed = pipeline.fit_transform(train_data)

test_data_processed = pipeline.transform(test_data)
# ```end
</CODE>

### <ERROR>
TypeError: Pipeline.__init__() got an unexpected keyword argument 'n_jobs'
</ERROR>

### Question: Fix the code error provided and return only the corrected pipeline without additional explanations regarding the resolved error.