SYSTEM MESSAGE:
###  Task: Generate list of tasks are required for data preprocessing in Python 3.10.
###  Input: A dataset in CSV format, a schema that describes the columns and data types of the dataset, and a data profiling info that summarizes the statistics and quality of the dataset.
###  Output: A Python 3.10 code that performs the following steps:
#1 : Import the necessary libraries and modules.
#2 : Load the training and test datasets. For the training data, utilize the variable """train_data=../../../data/Jungle-Chess/Jungle-Chess_train.csv""", and for the test data, employ the variable """test_data=../../../data/Jungle-Chess/Jungle-Chess_test.csv""". Utilize pandas' CSV readers to load the datasets.
#3 : Don't split the train_data into train and test sets. Use only the given datasets.
#4 : The user will provide the Schema, and Data Profiling Info of the dataset with columns appropriately named as attributes, enclosed in triple quotes, and preceded by the prefix "Schema, and Data Profiling Info:".
#5 : If the question is not relevant to the dataset or the task, the output should be: "Insufficient information."
#6 : Utilize data augmentation techniques on the dataset to enhance accuracy and mitigate overfitting.
#7 : The target feature in the dataset is "class".
#8 : Don't display the first few rows of the datasets.
#9 : Each codeblock ends with "```end" and starts with "```python".
#10 : Don't use "if __name__ == '__main__':" style, use only flat mode.
---------------------------------------
PROMPT TEXT:
###  Description of the dataset:


 Description 



This dataset is part of a collection datasets based on the game "Jungle Chess" (a.k.a. Dou Shou Qi). For a description of the rules, please refer to the paper (link attached). The paper also contains a description of various constructed features. As the tablebases are a disjoint set of several tablebases based on which (two) pieces are on the board, we have uploaded all tablebases that have explicit different content:

* Rat vs Rat
* Rat vs Panther
* Rat vs. Lion
* Rat vs. Elephant
* Panther vs. Lion
* Panther vs. Elephant
* Tiger vs. Lion
* Lion vs. Lion
* Lion vs. Elephant
* Elephant vs. Elephant
* Complete (Combination of the above)
* RAW Complete (Combination of the above, containing for both pieces just the rank, file and strength information). This dataset contains a similar classification problem as, e.g., the King and Rook vs. King problem and is suitable for classification tasks. 

(Note that this dataset is one of the above mentioned datasets). Additionally, note that several subproblems are very similar. Having seen a given positions from one of the tablebases arguably gives a lot of information about the outcome of the same position in the other tablebases. 

J. N. van Rijn and J. K. Vis, Endgame Analysis of Dou Shou Qi. ICGA Journal 37:2, 120--124, 2014. ArXiv link: https://arxiv.org/abs/1604.07312


### Schema, and Data Profiling Info:
"""
# black_piece0_file (int), categorical-values [0,5,2,6,1,3,4]
# white_piece0_strength (int), categorical-values [7,0,5,4,6]
# black_piece0_strength (int), categorical-values [4,0,6,7,5]
# black_piece0_rank (int), categorical-values [1,4,6,7,0,2,8,5,3]
# white_piece0_rank (int), categorical-values [2,0,3,1,4,5,7,6,8]
# white_piece0_file (int), categorical-values [1,5,4,6,2,0,3]
# class (int, **This is a target column**), categorical-values [2,0,1]
"""

### Encode categorical values by "on-hot-encoder" for the following columns:
	# Columns: black_piece0_file,white_piece0_strength,black_piece0_strength,black_piece0_rank,white_piece0_rank,class,white_piece0_file

### Dataset Attribute:
# Number of samples (rows) in training dataset: 2000

### Question: Provide a pipeline code that do data preprocessing in a multi-threaded environment.