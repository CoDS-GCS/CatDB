# ```python
import pandas as pd

df = pd.read_csv('original_data.csv')

df['Gender'] = df['Gender'].str.lower()

df['Company size'] = df['Company size'].str.lower().replace({'up to 10': '<=10'})

df['Сontract duration'] = df['Сontract duration'].str.lower().replace({'0': 'unlimited contract'})

df['Main language at work'] = df['Main language at work'].str.lower().replace(
    {'english and german': 'english', 
     '50/50': 'english', 
     'русский': 'russian', 
     'deuglisch': 'english', 
     'both': 'english',
     'russian, english': 'english'})

df['Number of vacation days'] = df['Number of vacation days'].str.lower().replace(
    {'unlimited ': 'unlimited',
     '30 in contract (but theoretically unlimited)': '30',
     'unlimited': '30',
     '~25': '25',
     '23+': '23',
     '24 labour days': '24',
     '37.5': '38',
     '(no idea)': '30'})
df['Number of vacation days'] = pd.to_numeric(df['Number of vacation days'], errors='coerce').fillna(-1).astype(int)


df['Total years of experience'] = df['Total years of experience'].str.lower().replace(
    {'1 (as qa engineer) / 11 in total': '11',
     '15, thereof 8 as cto': '15',
     '6 (not as a data scientist, but as a lab scientist)': '6',
     'less than year': '0'}).str.replace(',', '.')
df['Total years of experience'] = pd.to_numeric(df['Total years of experience'], errors='coerce').fillna(-1).astype(float)

df['Seniority level'] = df['Seniority level'].str.lower().replace(
    {'no level ': 'no level',
     'c-level executive manager': 'c-level',
     'c-level': 'head',
     'working student': 'student',
     'entry level': 'junior',
     'intern': 'student',
     'student': 'junior',
     'self employed': 'no level'})

df['Years of experience in Germany'] = df['Years of experience in Germany'].str.lower().replace(
    {'4 (in switzerland), 0 (in germany)': '0',
     '4 month': '0',
     '3 months': '0',
     '< 1': '0',
     '⁰': '0',
     '6 (not as a data scientist, but as a lab scientist)': '0',
     'less than year': '0'}).str.replace(',', '.')
df['Years of experience in Germany'] = pd.to_numeric(df['Years of experience in Germany'], errors='coerce').fillna(-1).astype(float)

df['Employment status'] = df['Employment status'].str.lower().replace(
    {'self-employed (freelancer)': 'self-employed',
     'company director': 'full-time employee',
     'founder': 'full-time employee',
     'working student': 'werkstudent',
     'full-time position, part-time position, & self-employed (freelancing, tutoring)': 'full-time employee',
     'full-time, but 32 hours per week (it was my request, i\'m a student)': 'full-time employee'})

df['Have you received additional monetary support from your employer due to Work From Home? If yes, how much in 2020 in EUR'] = df['Have you received additional monetary support from your employer due to Work From Home? If yes, how much in 2020 in EUR'].str.lower().replace(
    {'no': '0',
     '180€': '180',
     '400 / month': '400',
     'yes': '0',
     '75% from government ': '0',
     '40 every month': '40',
     '200 amazon voucher': '200',
     '600 nett': '600',
     '20%': '0',
     'i was able to move all equipment i need to work to home': '0',
     '0,00': '0'}).str.replace(',', '.')
df['Have you received additional monetary support from your employer due to Work From Home? If yes, how much in 2020 in EUR'] = pd.to_numeric(df['Have you received additional monetary support from your employer due to Work From Home? If yes, how much in 2020 in EUR'], errors='coerce').fillna(-1).astype(float)

df['Have you lost your job due to the coronavirus outbreak?'] = df['Have you lost your job due to the coronavirus outbreak?'].str.lower().replace(
    {'i didn\'t but will be looking for new one because of covid': 'no',
     'kurzarbeitzeit for 1.5 months': 'no',
     'have been a freelancer at the beginning of year': 'no',
     'no, but there was a salary cut at 10% for 3 months and then at 5% for further 3 months': 'no',
     'lost the job but for different reason': 'yes',
     'leads and project inquiries have slowed down': 'no',
     'laid off for a bit': 'yes',
     'yes but found a new one with better pay / perks': 'yes'})

df['Company type'] = df['Company type'].str.lower().replace(
    {'consulting / agency': 'consulting',
     'personal ltd': 'product',
     'behorde': 'product',
     'big commercial': 'product',
     'outsorce': 'outsourse',
     'bank ': 'bank',
     'it department of established business': 'product',
     'systemhaus': 'product',
     'consumer goods': 'product',
     'it-outsourcing': 'outsourse',
     'game company': 'product',
     'no': 'product',
     'financial ': 'finance',
     'publishing and technology': 'product',
     'market research ': 'product',
     'e-commerce': 'ecommerce',
     'bloody enterprise': 'enterprise',
     'concern': 'enterprise',
     'utilities': 'enterprise',
     'science institute ': 'research institute',
     'retail': 'ecommerce',
     'ecommerce': 'e-commerce',
     'e-commerce': 'e-commerce',
     'automotive ': 'automotive',
     'handel ': 'product',
     'consulting and product': 'consulting',
     'full-time position in education, part-time position in at a data startup': 'startup',
     'corporation ': 'corporation',
     'transport & logistics': 'product',
     'biergarten ': 'product',
     'non-tech retail': 'product',
     'corporate incubator': 'startup',
     'multinational ': 'corporation',
     'old industry': 'product',
     'outsourse': 'outsource',
     'freelance': 'startup'})

df['City'] = df['City'].str.lower().replace(
    {'konstanz area': 'konstanz',
     'mannheim ': 'mannheim',
     'boeblingen': 'böblingen',
     'nürnberg': 'nuremberg',
     'karlsruhe ': 'karlsruhe',
     'dusseldorf': 'düsseldorf',
     'würzburg': 'wuerzburg',
     'cracovia': 'cracow',
     'braunschweig ': 'brunswick',
     'stuttgart ': 'stuttgart',
     'nuremberg ': 'nuremberg',
     'bodensee': 'konstanz',
     'wroclaw': 'warsaw',
     'dublin ': 'dublin',
     'düsseldorf ': 'düsseldorf',
     'bölingen': 'boeblingen',
     'tampere (finland)': 'tampere',
     'warsaw, poland': 'warsaw',
     'city in russia': 'moscow',
     'murnau am staffelsee ': 'murnau am staffelsee',
     'zürich': 'zurich',
     'brussels ': 'brussels',
     'hildesheim ': 'hildesheim',
     'prefer not to say': 'berlin',
     'dusseldurf': 'düsseldorf',
     'fr': 'frankfurt',
     'duesseldorf': 'düsseldorf',
     'ingolstadt ': 'ingolstadt',
     'saint-petersburg': 'st. petersburg',
     'saarbrücken': 'saarbruecken'})

df['Position '] = df['Position '].str.lower().replace(
    {'team lead': 'tech lead',
     'test manager': 'qa manager',
     'analytics engineer': 'data engineer',
     'account managet': 'manager',
     'agile master ': 'agile coach',
     'ml engineer': 'data scientist',
     'solutions architect': 'solution architect',
     'fullstack developer': 'software engineer',
     'cloud architect': 'software architect',
     'system administrator': 'systeadministrator',
     'network engineer ': 'network engineer',
     'vp engineering': 'manager',
     'data science manager': 'manager',
     'scrum master': 'agile coach',
     'firmware engineer': 'hardware engineer',
     'data center manager': 'manager',
     'c/c++/java developer': 'software engineer',
     'devops manager': 'devops',
     'network administrator': 'network engineer',
     'security manager': 'security engineer',
     'consultant data analytics': 'consultant',
     'bi it consultant': 'bi consultant',
     'graphic designer': 'designer (ui/ux)',
     'ios developer': 'mobile developer',
     'cloud engineer': 'software engineer',
     'solutions architect': 'solution architect',
     'stuttgart': 'software engineer',
     'senior program manager': 'program manager',
     'db developer/data analyst': 'data analyst',
     'dba': 'data engineer',
     'support engineer': 'software engineer',
     'testautomation': 'qa engineer',
     'sap developer': 'software engineer',
     'systemadministrator': 'systeadministrator',
     'sw architect': 'software architect',
     'sre': 'devops',
     'fullstack engineer, ну или software engineer': 'software engineer',
     'hiwi': 'student',
     'project manager': 'program manager',
     'tech lead / full-stack': 'tech lead',
     'cto': 'head',
     'senior network&security eng.': 'security engineer',
     'software tester ': 'qa engineer',
     'sap bw senior consultant ': 'sap consultant',
     'qa manager ': 'qa manager',
     'director of engineering': 'manager',
     'it spezialist': 'software engineer',
     'consultant ': 'consultant',
     'software developer in test': 'qa engineer',
     'technical account manager ': 'manager',
     'chief research officer': 'researcher',
     'presales engineer ': 'software engineer',
     'freelance ai lead / advisor': 'data scientist',
     'business development manager operations ': 'business development manager',
     'engineering manager': 'manager',
     'embedded software engineer': 'software engineer',
     'dana analyst': 'data analyst',
     'team manager': 'manager',
     'data analyst ': 'data analyst',
     'working student (qa)': 'student',
     'architect ': 'software architect',
     'head of engineering': 'head',
     'bi consultant sap/ data engineer': 'bi consultant',
     'computer vision researcher': 'researcher',
     'teamlead': 'tech lead',
     'head of it ': 'head',
     'lead software developer': 'software engineer',
     'tech recruiting': 'recruiter',
     'bi analyst ': 'bi analyst',
     'bi developer / data engineer': 'bi consultant',
     'senior scrum master (rte)': 'agile coach',
     'head of bi': 'head',
     'technical project manager': 'program manager',
     'project manager ': 'program manager',
     'support engineer': 'software engineer',
     'security engineer': 'security engineer',
     'big data engineer': 'data engineer',
     'manager ': 'manager',
     'ai management': 'manager',
     'sales ': 'manager',
     'xr developer': 'software engineer',
     'student, software developer, data engineer': 'student',
     'engineering team lead': 'tech lead',
     'dataops team lead': 'tech lead',
     'software sales': 'manager',
     'beikoch': 'no level',
     'product management praktikant': 'product manager',
     'data analyst ': 'data analyst',
     'product analyst': 'data analyst',
     'team lead': 'tech lead',
     'it consulting ': 'consultant',
     'data architect': 'software architect',
     'staff engineer': 'software engineer',
     'head of it': 'head',
     'computational linguist': 'researcher',
     'rentner': 'no level',
     'technical business analyst': 'business analyst',
     'qa lead': 'qa manager',
     'robotics engineer': 'hardware engineer',
     'databengineer': 'data engineer',
     'application consultant': 'consultant',
     'lead developer': 'software engineer',
     'software architekt': 'software architect',
     'testmanager': 'qa manager',
     'erp consultant': 'consultant',
     'researcher/ consumer insights analyst ': 'researcher',
     'it operations manager': 'manager'})

df['Your main technology / programming language'] = df['Your main technology / programming language'].str.lower().replace(
    {'javascript / typescript': 'javascript',
     'aws, gcp, python,k8s': 'python',
     'aws hadoop postgre typescript': 'typescript',
     'kotlin': 'kotlin',
     'nodejs': 'node.js',
     'java': 'java',
     'go/python': 'python',
     'с#': 'c#',
     'php': 'php',
     'ruby on rails': 'ruby',
     'javascript/es6': 'javascript',
     '.net': '.net',
     'google cloud platform': 'gcp',
     'js': 'javascript',
     'c#, .net core': 'c#',
     'vhdl': 'hardware',
     'php ': 'php',
     'none': '-',
     'ml': 'python',
     'scala, react.js': 'scala',
     'ml/python': 'python',
     'javascript/typescript': 'javascript',
     'ruby on rails': 'ruby',
     'azure, sap': 'sap',
     'frontend': 'javascript',
     'java, javascript': 'java',
     'python ': 'python',
     'java ': 'java',
     '-': 'other',
     'typescript, javascript': 'typescript',
     'pegasystems platform ': 'other',
     'c++, java, embedded c': 'c++',
     'cloud': 'other',
     'dc management': 'other',
     '--': 'other',
     'swift': 'swift',
     'java, angular, aws': 'java',
     'swift, objective-c': 'swift',
     'golang': 'go',
     'go': 'go',
     'devops': 'other',
     '.net': '.net',
     'network': 'other',
     'nothing': 'other',
     'qlik bi tool, sql': 'sql',
     'blockchain': 'other',
     'autonomous driving': 'other',
     'js, typescript, angular': 'javascript',
     't-sql': 'sql',
     'java, terraform': 'java',
     'pascal, vb.net, c#': 'c#',
     'javascript ': 'javascript',
     'angular, react': 'javascript',
     'nodejs, typescript, aws': 'node.js',
     'erlang': 'other',
     'java, js': 'java',
     'objective-c': 'other',
     'qa': 'other',
     'c++/c#': 'c++',
     'abap': 'sap',
     'java/kotlin': 'java',
     'typescript / angular': 'typescript',
     'react/typescript': 'typescript',
     'golang ': 'go',
     'salesforce ': 'other',
     'java/c++': 'java',
     'scala / python': 'scala',
     'java/scala': 'java',
     'web developer': 'javascript',
     'javascript/typescript': 'javascript',
     'typescript, react': 'typescript',
     'python / javascript (react)': 'python',
     'javascript / typescript': 'javascript',
     'java': 'java',
     'apache spark': 'spark',
     'computer networking,  network security ,sql': 'sql',
     'sap bw / abap': 'sap',
     'kotlin ': 'kotlin',
     'jira': 'other',
     'qml': 'other',
     'c#/.net': 'c#',
     'kotlin, java': 'kotlin',
     'linux kernel': 'linux',
     'several': 'other',
     'android/kotlin': 'kotlin',
     'embedded': 'other',
     'java/groovy': 'java',
     'python + sql': 'python',
     'typescript, web apps': 'typescript',
     'terraform ': 'other',
     'java, .net': 'java',
     'python, statistics, sql': 'python',
     'sql, bq, tableau, gtm, ga': 'sql',
     'react ': 'javascript',
     'business development manager operation ': 'other',
     'management': 'other',
     'java, kotlin': 'java',
     'nodejs': 'node.js',
     'ts': 'typescript',
     'spark, pytorch': 'python',
     'c/c++': 'c++',
     'java/scala/go/clouds/devops': 'java',
     'linux/unix, git, virtualisation platforms, *shell(s) scripts': 'linux',
     'python, sql': 'python',
     'dwh': 'other',
     'sketch, figma': 'other',
     'k8s': 'kubernetes',
     'frontend: react, node.js': 'javascript',
     'vb, rpa, python': 'python',
     'fbd': 'other',
     'c, c++': 'c++',
     'swift, objective-c, ios': 'swift',
     'javascript / typescript': 'javascript',
     'sap / abap': 'sap',
     'kubrrnetes': 'kubernetes',
     'networking, linux, automation, cloud': 'other',
     'uml': 'other',
     'js, reactjs ': 'javascript',
     'cobol': 'other',
     'clojure': 'other',
     'js, wdio': 'javascript',
     'terraform, kubernetes, aws, gcp, ansible, puppet': 'kubernetes',
     'spring': 'java',
     'офмф': 'other',
     'react js': 'javascript',
     'typescript ': 'typescript',
     'typescript/angular': 'typescript',
     'kotlin/php': 'kotlin',
     'sap abap': 'sap',
     'ai': 'python',
     'pythin': 'python',
     'julia': 'other',
     'java & php': 'java',
     'sql ': 'sql',
     'c++/c': 'c++',
     'angular, typescript': 'typescript',
     'pyrhon': 'python',
     'pm tools': 'other',
     'grails, groovy': 'other',
     'python ': 'python',
     'react / javascript': 'javascript',
     'perl': 'other',
     'python, cloud computing ': 'python',
     'haskell': 'other',
     'javscript': 'javascript',
     'python (django)': 'python',
     'network automation': 'other',
     'kubernetes, terraform, gcp': 'kubernetes',
     'powershell': 'other',
     'python, scala': 'python',
     'django, flask, plotly dash': 'python',
     'javascript, angular': 'javascript',
     'sas,sql,python': 'python',
     'node': 'node.js',
     'python/sql': 'python',
     'php, js, python, docker': 'python',
     'c, matlab': 'other',
     'typescript, kotlin': 'typescript',
     'apotheker': 'other',
     'javascript, typescript': 'javascript',
     'tricentis tosca': 'other',
     'swift/kotlin': 'swift',
     'java & distributed systems stuff': 'java',
     'jenkins bash': 'other',
     'test management ': 'other',
     'nodejs/ts': 'node.js',
     'php/mysql': 'php',
     'angular, typescript': 'typescript',
     'nlp, python': 'python',
     'python, whole apache data science stack, aws': 'python',
     'embedded c++': 'c++',
     'nodsjs': 'node.js',
     'javascript/typescript': 'javascript',
     'kuberenetes, openstack': 'kubernetes',
     'c/c++': 'c++',
     'js, java': 'java',
     'python, pytorch': 'python',
     'ps, sketch, react, css3': 'javascript',
     'python/nlp': 'python',
     'scala, apache spark': 'scala',
     'swift, objective-c': 'swift',
     'react.js / typescript': 'typescript',
     'bi, dwh, etl/elt': 'other',
     'gcp': 'gcp',
     'web': 'javascript',
     'pl/sql': 'sql',
     'scala': 'scala',
     'java / scala': 'java',
     'magento': 'php',
     'python, database technologies': 'python',
     'c++, c#': 'c++',
     'java backend': 'java',
     '.net, c++, spss, embeddded': '.net',
     '.net, angular': '.net',
     'atlassian jira': 'other',
     'qlik': 'other',
     'consumer analysis': 'other'})

df['Other technologies/programming languages you use often'] = df['Other technologies/programming languages you use often'].str.split(',')
df = df.explode('Other technologies/programming languages you use often')
df = pd.concat([df,pd.get_dummies(df['Other technologies/programming languages you use often'].str.strip(), prefix='Other technologies/programming languages you use often_')], axis=1)
df = df.drop(columns=['Other technologies/programming languages you use often'])
df.to_csv('clean_data.csv', index=False)
# ```end