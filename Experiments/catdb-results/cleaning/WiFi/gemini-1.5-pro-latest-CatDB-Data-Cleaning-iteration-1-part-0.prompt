SYSTEM MESSAGE:
###  Clean the categorical columns values basd on the LLM-knowledge.
###  A dataset in CSV format and categorical features of Tables(s) and values of them.
###  A Python 3.10 code that performs the following steps:
# 1: Utilize pandas CSV readers to load the datasets from """original_data={'original_data.csv'}""".
# 2: The user will provide the categorical features of the dataset with columns appropriately named as attributes, enclosed in triple quotes, and preceded by the prefix "Schema, and Categorical Data:".
# 3: Carefully read the user-provided data and create and identify data dependencies and relationships.
# 4: Check the duplication of values by Capitalization (e.g., "United States" , "united States")
# 5: Check the duplication of values by Misspellings (e.g., "Male" , "Mail" , "Make" , "msle")
# 6: Check the duplication of values by Abbreviation (e.g., "California" , "CA")
# 7: Check the duplication of values by Difference of Special Characters (e.g., "Black/Blue" , "Black-Blue")
# 8: Check the duplication of values by Different Ordering (e.g., “GoldWhite“ , “WhiteGold”)
# 9: Check the duplication of values by Synonyms (e.g., "Female" , "Woman")
# 10: Check the duplication of values by Presence of Extra Information (e.g., "Houston" , "Houston TX", "Houston TX 77055")
# 11: Check the duplication of values by Different grammar (e.g., "triColor" , "tricolored")
# 12: Assume the data is in a pandas dataframe. Return a part of python code in order to clean dataset in a in-place mode.
# 13: Do not return extra messages or explanations.
# 14: Do not fill missed values or do not do other preprocessing operations. Just refine the dataset..
# 15: Save the refined dataframe at the """clean_data_path={'clean_data.csv'}""".
# 16: Code formatting for all required packages and pipeline format:
# Import all required packages  
# Do not use "if __name__ == __main__:" style, use only flat mode.

# 17: Each codeblock ends with "```end" and starts with "```python".
---------------------------------------
PROMPT TEXT:
Schema, and Categorical Data:
"""
# Column Name is "Inhibit", categorical-values ["Sometimes","Always","Often","Rarely","Never"]
# Column Name is "DataPlan", categorical-values ["No","Yes","I don't have access to cellular data."]
# Column Name is "HotspotFrequency", categorical-values ["Never","Rarely","Often","Occasionally","I do not have a phone"]
# Column Name is "HotspotUse", categorical-values ["I do not use hotspots","Yes","I use hotspots for other reasons","No"]
# Column Name is "Dorm", categorical-values ["Day student","George","Jane","Coit","Bellingrath","Irene","Ernest","Anderson"]
# Column Name is "Problem", categorical-values ["The speed of the wifi","Connecting to the wifi","I do not have any problems"]
# Column Name is "Locations", categorical-values ["Working on my laptop ","The library","Class","Hodgson or student center ","Bellingrath","dorm","In the clasroom or in the library","Hodgeson","A&T","Dorm","In the dorm","Dorm. TV Room.","In the library or at the A&T. ","hodgsons hall","Classrooms?","hight school and a&t","Hodgson Hall","Hodgson ","School, dorm","Classrooms","A&T / Dorm","a&t","A n t","Class room","Hodgson hall","Hodgson","School","In class","Highschool and a&t","school and dorm","High School","School and dorm","A&t","dorm and high school ","Everywhere ","George dorm","Library ","Hodgenson hall","Upper school ","Hodgson Hall or Student Center","Teacher Learning Center","Hodgson/ A&T","Classes/Library","the a&t","in class","hodgson","The dorm","Hodson hall","Library","Classes - Hodgson ","Classes, student center","Hodgision hall","Coit","In the highschool","A&T Building","Classroom ","Hodgson Hall ","TLC, Hodgeson hall, a and t","Dorm, Student Center, Classroom","dorn","SC/Library","at hodgson","class","At school","The A&T","Hogdson Hall","High school","yes","In classrooms and in the library."]
"""

### Question: Find the categorical data duplication and apply it on the dataframe.