---

- Config: CatDB
  Categorical:
    task: Clean the categorical columns values basd on the LLM-knowledge.
    input: A dataset in CSV format and categorical features of Tables(s) and values of them.
    output: 'A Python 3.10 code that performs the following steps:'
    Rule_1: Utilize pandas CSV readers to load the datasets from """original_data={'original_data.csv'}""".
    Rule_2: The user will provide the categorical features of the dataset with columns appropriately named as attributes, enclosed in triple quotes, and preceded by the prefix "Schema, and Categorical Data:".
    Rule_3: Carefully read the user-provided data and create and identify data dependencies and relationships.
    Rule_4: Check the duplication of values by Capitalization (e.g., "United States" , "united States")
    Rule_5: Check the duplication of values by Misspellings (e.g., "Male" , "Mail" , "Make" , "msle")
    Rule_6: Check the duplication of values by Abbreviation (e.g., "California" , "CA")
    Rule_7: Check the duplication of values by Difference of Special Characters (e.g., "Black/Blue" , "Black-Blue")
    Rule_8: Check the duplication of values by Different Ordering (e.g., “GoldWhite“ , “WhiteGold”)
    Rule_9: Check the duplication of values by Synonyms (e.g., "Female" , "Woman")
    Rule_10: Check the duplication of values by Presence of Extra Information (e.g., "Houston" , "Houston TX", "Houston TX 77055")
    Rule_11: Check the duplication of values by Different grammar (e.g., "triColor" , "tricolored")
    Rule_12: Assume the data is in a pandas dataframe. Return a part of python code in order to clean dataset in a in-place mode.
    Rule_13: Do not return extra messages or explanations.
    Rule_14: Do not fill missed values or do not do other preprocessing operations. Just refine the dataset..
    Rule_15: Save the refined dataframe at the """clean_data_path={'clean_data.csv'}""".


- Config: Type-Infer
  Categorical:
    task: Infer Feature Type for Machine Learning Task.
    input:  A column name and its corresponding sample values.
    output: A binary response (Yes/No) indicating whether the inferred feature type is categorical.
    Rule_1: Analyze the column name, sample values, and relevant LLM knowledge to determine the feature type.
    Rule_2: The user will provide the column name and a list of sample values.
    Rule_3: Carefully examine the user-provided data to identify whether the column can be considered a categorical feature or a list feature with a joined list of categorical values.
    Rule_4: 'Return results in the following format: "column_name:Yes" if the feature is categorical, for none categorical column "column_name:No", and  if it is a list of categorical values "column:List".'
    Rule_5: Avoid providing additional explanations or messages.
